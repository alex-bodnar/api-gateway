// Code generated by MockGen. DO NOT EDIT.
// Source: services.go

// Package services is a generated GoMock package.
package services

import (
	users "authenticator/internal/api/domain/users"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsersService is a mock of UsersService interface.
type MockUsersService struct {
	ctrl     *gomock.Controller
	recorder *MockUsersServiceMockRecorder
}

// MockUsersServiceMockRecorder is the mock recorder for MockUsersService.
type MockUsersServiceMockRecorder struct {
	mock *MockUsersService
}

// NewMockUsersService creates a new mock instance.
func NewMockUsersService(ctrl *gomock.Controller) *MockUsersService {
	mock := &MockUsersService{ctrl: ctrl}
	mock.recorder = &MockUsersServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersService) EXPECT() *MockUsersServiceMockRecorder {
	return m.recorder
}

// CheckUserByName mocks base method.
func (m *MockUsersService) CheckUserByName(ctx context.Context, name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckUserByName", ctx, name)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckUserByName indicates an expected call of CheckUserByName.
func (mr *MockUsersServiceMockRecorder) CheckUserByName(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUserByName", reflect.TypeOf((*MockUsersService)(nil).CheckUserByName), ctx, name)
}

// SaveNewUser mocks base method.
func (m *MockUsersService) SaveNewUser(ctx context.Context, userData users.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveNewUser", ctx, userData)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveNewUser indicates an expected call of SaveNewUser.
func (mr *MockUsersServiceMockRecorder) SaveNewUser(ctx, userData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveNewUser", reflect.TypeOf((*MockUsersService)(nil).SaveNewUser), ctx, userData)
}
